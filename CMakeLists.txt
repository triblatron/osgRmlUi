PROJECT( osgRmlUi )

FIND_PACKAGE( OpenSceneGraph REQUIRED )

INCLUDE_DIRECTORIES(include ${OSG_INCLUDE_DIR} $ENV{OSG_DIR}/include ${PROJECT_BINARY_DIR}/include)

SET(LIB_NAME osgRmlUi)

SET(HEADER_PATH ${CMAKE_CURRENT_SOURCE_DIR}/include/osgRmlUi)
SET(SOURCE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/source)

SET(LIB_PUBLIC_HEADERS
    ${HEADER_PATH}/export.h
    ${HEADER_PATH}/FileInterface
    ${HEADER_PATH}/GuiNode
    ${HEADER_PATH}/RenderInterface
    ${HEADER_PATH}/SystemInterface
)

SET(LIB_SOURCES

    ${SOURCE_PATH}/FileInterface.cpp
    ${SOURCE_PATH}/GuiNode.cpp
    ${SOURCE_PATH}/RenderInterface.cpp
    ${SOURCE_PATH}/SystemInterface.cpp
)

SET( RMLUI_INCLUDE_DIR CACHE PATH "Path to the RmlUi includes" )

INCLUDE_DIRECTORIES(
  ${CMAKE_CURRENT_SOURCE_DIR}/include
  ${OSG_INCLUDE_DIR}
  ${OPENTHREADS_INCLUDE_DIR}
  ${RMLUI_INCLUDE_DIR}
)

IF(BUILD_OSGRMLUI_STATIC)
    SET(OSGRMLUI_STATIC_SHARED "STATIC")
ELSE ()
   ADD_DEFINITIONS(-DOSGRMLUI_DYNAMIC)
   SET(OSGRMLUI_STATIC_SHARED "SHARED")
ENDIF()

ADD_LIBRARY(    ${LIB_NAME} ${OSGRMLUI_STATIC_SHARED}
                ${LIB_PUBLIC_HEADERS}
                ${LIB_SOURCES}
)

SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES DEFINE_SYMBOL OSGRMLUI_LIBRARY)

INCLUDE(ModuleInstall OPTIONAL)


TARGET_LINK_LIBRARIES(${LIB_NAME}   ${OPENSCENEGRAPH_LIBRARIES}
                                    ${OPENTHREADS_LIBRARIES}
                                    ${RMLUI_CORE_LIBRARY}
                                    ${RMLUI_CONTROLS_LIBRARY}
                                    ${RMLUI_DEBUGGER_LIBRARY}
)

IF (MSVC)
  SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES DEBUG_POSTFIX "${CMAKE_DEBUG_POSTFIX}")
  SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES OUTPUT_NAME ${LIB_NAME})
  SET_TARGET_PROPERTIES(${LIB_NAME} PROPERTIES DEBUG_OUTPUT_NAME ${LIB_NAME})
ENDIF (MSVC)


INSTALL(FILES source/FindOsgRmlUi.cmake DESTINATION cmake)
INSTALL(TARGETS osgRmlUi
    LIBRARY DESTINATION lib
)
INSTALL(FILES ${LIB_PUBLIC_HEADERS} DESTINATION include/osgRmlUi
)
